/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        Map<Integer,Integer> map = new HashMap<>();
        ListNode current = head;
        while (current != null) {
            map.put(current.val, map.getOrDefault(current.val, 0)+1);
            current = current.next;
        }
        ListNode res = new ListNode(0);
        ListNode ls = res;
        List<Integer> keys = new ArrayList<>(map.keySet());
        Collections.sort(keys);
        for(Integer key: keys){
            int val = map.get(key);
            if(val == 1){
                ls.next = new ListNode(key);
                ls = ls.next;
            }
        }
        return res.next;
    }
}
